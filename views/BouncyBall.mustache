<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Bouncy Ball</title>
    <link rel='shortcut icon' type='image/gif' href='/images/favicon.ico' />
    <style>
    	* { padding: 0; margin: 0; text-align:center; background:powderblue}
    	canvas { background: #eee; display: block; margin: auto; padding: 0;}
		form input { padding: 8px; width: 100%; background-color: white; border-color: black; border-width: 1px; background: white; }

		ul, li{
			list-style-type:none;
		}li{border: 1px solid; border-bottom-width: .5px;}
		
		
		
    </style>
</head>
<body>
<div id = "welcome"></div>
<div id="y">Bouncy Ball :)</div>
<div id="t">Click to make a lil bouncy ball</div>
<form action="" style="position: absolute; left: 1690px; top: 225px; width:210px; height:10px;display:none;">
		<input id = "chatBar" autocomplete="off" style = "z-index: 1; text-align: left; display: none;" />
</form>

<ul id = "usersMenu" style = "position: absolute; left: 860px; top: 250px; width: 200px;height: 20px; display:none;">
	<li>Connected Users:</li>
</ul>		

	<canvas id="myCanvas" width="1280" height="800"></canvas>

<a href="/home">Back to Homepage</a>

<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<sript src ='/js/bouncyball.js'></sript>

<script>
//Server and Config
//https://cdn.socket.io/socket.io-1.2.0.js
var debugCount = 0;

var socket = io();
var users = [];
var balls = [];
var chats = [];
var userIndex = 0;
var toggleText = false;
var toggleTab = false;

//chat object
function chat(username = "null", msg = "", color = "Black",x,y){
	this.username = username;
	this.msg = msg;
	this.color = color;
	this.x = x;
	this.y = y;
	this.filled = false;
	this.count = 0;
}

chat.prototype.draw = function(){
	c.fillStyle = this.color;
	if(this.filled){
		c.fillText(this.username + ": " + this.msg, this.x, this.y);
		this.count++;
	}
	if(this.count == 4000){
		this.filled = false;
		this.count = 0;
	}
}

//user object
function user(username,mouseX,mouseY, color){
	this.username = username;
	this.mouseX = mouseX;
	this.mouseY = mouseY;
	this.color = color;
}

user.prototype.mouseUpdate = function(clientX,clientY){
	this.mouseX = clientX;
	this.mouseY = clientY;
}

user.prototype.drawMouse = function(){
	c.beginPath();
	c.fillStyle = this.color;
	c.arc(this.mouseX,this.mouseY,4,0,Math.PI*2);
	c.fillText(this.username,this.mouseX,this.mouseY-10);
	c.fill();
	c.closePath();
}

function checkUsers(){
	//checks to make sure user data is up to date before doing other things
	var check = true;

	for (i=users.length-1;i >=0;i--){
		if(!(users == user)){
			check = false;
		}
		}
		
		if(check){
			init = true;
		}
	

}

var canvas = document.getElementById("myCanvas")
var c = canvas.getContext("2d");
var rect = canvas.getBoundingClientRect();
c.fillStyle = "#0095DD";

var divX = document.getElementById("y");
var divY = document.getElementById("t");
var welcome = document.getElementById("welcome");

var usersMenu = document.getElementById("usersMenu");
var chatBar = document.getElementById("chatBar");

var mouseX = 0;
var mouseY = 0;

//user menu setup
var userX = (860/1920)*canvas.width + rect.left;
var userY = (250/800)*canvas.height - rect.top + 36;
var userWidth = (210/1920)*canvas.width;
var userHeight = (20/800)*canvas.height;
usersMenu.style.left = userX+"px";
usersMenu.style.top = userY+"px";
usersMenu.style.width = userWidth+"px";
usersMenu.style.height = userHeight+"px";

//Chat setup
var chatX = 0;
var chatY = (165/800)*canvas.height;
var chatIncrement = 15;
var chatBarX = chatX + rect.left;
var chatBarY = (225/800)*canvas.height - rect.top + 36;
var chatBarWidth = (200/1920)*canvas.width;
var chatBarHeight = (10/800)*canvas.height;
chatBar.form.style.left = chatBarX+"px"; 
chatBar.form.style.top = chatBarY+"px";
chatBar.form.style.width = chatBarWidth+"px";

for(var i = 0; i <= (chatY/chatIncrement)-1; i++){
	chats[i] = new chat("","","black",chatX, chatY - (i*chatIncrement));
}

//Server
var init = false;
var username;
if({{logininfo}} == 2){
	username = "{{username}}";
}
else{
	username = prompt("What is your username?");
}
welcome.innerHTML = "Welcome, " + username + "!";
socket.emit('username', username);

socket.on('index', function(index){
	userIndex = index;
	for(var i = 0; i<userIndex; i++){
		socket.emit('request user', i);
	}
});

socket.on('username', function(index, username, color){
	users[index] = new user(username,0,0,color);
	$('#usersMenu').append($('<li>').text(username));
});

socket.on('request user', function(index, username, mouseX, mouseY, color){
	users[index] = new user(username,mouseX,mouseY,color);
	$('#usersMenu').append($('<li>').text(username));
	
});


socket.on('user disconnect', function(index){
	users.splice(index,1);
	if(userIndex > index){
		userIndex--;
	}
	$('#usersMenu').empty();
	$('#usersMenu').append($('<li>').text("Connected Users:"));
	for(var i = 0; i < users.length; i++){
		$('#usersMenu').append($('<li>').text(users[i].username));
	}
	
	socket.emit('user disconnect', index);
});

$('form').submit(function(e){
	e.preventDefault();
    socket.emit('chat message', $('#chatBar').val(),users[userIndex].username, users[userIndex].color);
    $('#chatBar').val('');
    return false;
});

socket.on('chat message', function(msg, username, color){
	for (i = chats.length-2;i >= 0; i--){
		var message = chats[i].msg;
		var user = chats[i].username;
		var colour = chats[i].color;
		if(chats[i].filled){
			chats[i+1].msg = message;
			chats[i+1].username = user;
			chats[i+1].color = colour;
			chats[i+1].filled = true;
			chats[i+1].count = chats[i].count;
		}
	}
	
	chats[0].filled = true;
	chats[0].msg = msg;
	chats[0].color = color;
	chats[0].username = username;
	chats[0].count = 0;
});

</script>

<script>
//Bouncy Ball Class
function ball(x,y,vy,vx,ax,ay,color){
	this.x = x;
	this.y = y;
	this.vy = vy;
	this.vx = vx;
	this.ax = ax;
	this.ay = ay;
	this.color = color;
}
	
ball.prototype.draw = function(){
	c.beginPath();
	c.fillStyle = this.color;
	c.arc(this.x,this.y,10,0,Math.PI*2);
	c.fill();
	c.closePath();
}

</script>

<script>
//Event Listeners (Mouse functions)

function getMousePos(canvas, evt) {
    var rect = canvas.getBoundingClientRect();
    return {
      x: evt.clientX - rect.left,
      y: evt.clientY - rect.top
    };
}

	canvas.addEventListener("mousemove", function(e){
		if(init){
			var pos = getMousePos(canvas, e);
			mouseX = pos.x;
			mouseY = pos.y;
			socket.emit('mousepos', userIndex, mouseX,mouseY);
			console.log(balls);
			
		}
	});
	
	socket.on('mousepos', function(index, mouseX, mouseY){
		users[index].mouseUpdate(mouseX, mouseY);
	});
	
	canvas.addEventListener("mousedown", function(e){	
		if(e.button == 0){
			socket.emit('createball', mouseX, mouseY);
		}
	
	});
	
	document.addEventListener("keydown", function(e){
		e = e || window.event;
		if(e.key == "`"){
			if(!toggleTab){
				usersMenu.style.display = "initial";
				toggleTab = true;
			}else if(toggleTab){
				usersMenu.style.display = "none";
				toggleTab = false;
			}	
		}
		
		if(e.key == "t"){
			if(!toggleText){
				chatBar.form.style.display = "initial";
				chatBar.style.display = "initial";
				chatBar.focus();
				toggleText = true;
			}
		}
		
		if (e.key == "Escape"){
			if(toggleText){
				chatBar.form.style.display = "none";
				chatBar.style.display = "none";
				toggleText = false;
			}
			
		}
	
	});
</script>

<script>
//ball update
socket.on('ballupdate', function(ballUpdate){

	for (var k = ballUpdate.length-1;k>=0; k--){
		if(balls[k] == ball){
			balls[k].x = ballUpdate[k].x;
			balls[k].y = ballUpdate[k].y;
			balls[k].vx = ballUpdate[k].vx;
			balls[k].vy = ballUpdate[k].vy;
			balls[k].ax = ballUpdate[k].ax;
			balls[k].ay = ballUpdate[k].ay;
		}else{
			balls[k] = new ball(ballUpdate[k].x,ballUpdate[k].y, ballUpdate[k].vy, ballUpdate[k].vx, ballUpdate[k].ax, ballUpdate[k].ay, ballUpdate[k].color);
		}
	
	}

});

socket.on('removeball', function(ballIndex){
	balls.splice(ballIndex,1);
});
</script>

<script>
//Draw function
var r,g,b;

function draw(){

	if(!init)
		checkUsers();
	
	if(init){

		c.beginPath();
		c.fillStyle = "#eee";
		c.fillRect(0,0,canvas.width,canvas.height);
		c.closePath();
		
		c.font = "12px Comic Sans MS";
		for (var k = chats.length-1; k>=0; k--){
			chats[k].draw();
		}
		
		for (var j = 0; j<=balls.length-1; j++){
			balls[j].draw();
		}
		
		c.font = "9px Comic Sans MS";
		for(i = users.length-1; i >=0; i--){
			users[i].drawMouse();
		}
		
		
	
	}
}
setInterval(draw,3);

</script>

</body>
</html>